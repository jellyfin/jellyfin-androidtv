[versions]
aboutlibraries = "8.9.4"
acra = "5.8.4"
android-desugar = "1.1.5"
android-gradle = "7.1.0"
androidx-activity = "1.4.0"
androidx-appcompat = "1.4.0"
androidx-cardview = "1.0.0"
androidx-constraintlayout = "2.1.2"
androidx-core = "1.7.0"
androidx-fragment = "1.4.0"
androidx-leanback = "1.1.0-rc01"
androidx-lifecycle = "2.4.0"
androidx-preference = "1.1.1"
androidx-recyclerview = "1.2.1"
androidx-startup = "1.1.0"
androidx-tvprovider = "1.1.0-alpha01"
androidx-window = "1.0.0-rc01"
androidx-work = "2.7.1"
detekt = "1.19.0"
exoplayer = "2.16.1"
glide = "4.12.0"
gson = "2.8.9"
jellyfin-apiclient = "v0.7.10"
jellyfin-sdk = "1.1.2"
junit = "4.13.2"
kenburnsview = "1.0.7"
koin = "3.1.4"
kotlin = "1.6.10"
kotlinx-coroutines = "1.5.2"
kotlinx-serialization = "1.3.1"
leakcanary = "2.7"
libvlc = "3.4.7"
mockk = "1.12.1"
slf4j-timber = "3.1"
timber = "5.0.1"

[plugins]
aboutlibraries = { id = "com.mikepenz.aboutlibraries.plugin", version.ref = "aboutlibraries" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

[libraries]
# Jellyfin
jellyfin-apiclient = { module = "com.github.jellyfin.jellyfin-sdk-kotlin:android", version.ref = "jellyfin-apiclient" }
jellyfin-sdk = { module = "org.jellyfin.sdk:jellyfin-core", version.ref = "jellyfin-sdk" }

# Kotlin
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

# Android(x)
android-gradle = { module = "com.android.tools.build:gradle", version.ref = "android-gradle" }
androidx-activity = { module = "androidx.activity:activity-ktx", version.ref = "androidx-activity" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-cardview = { module = "androidx.cardview:cardview", version.ref = "androidx-cardview" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "androidx-fragment" }
androidx-leanback-core = { module = "androidx.leanback:leanback", version.ref = "androidx-leanback" }
androidx-leanback-preference = { module = "androidx.leanback:leanback-preference", version.ref = "androidx-leanback" }
androidx-lifecycle-livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-preference = { module = "androidx.preference:preference-ktx", version.ref = "androidx-preference" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "androidx-recyclerview" }
androidx-startup = { module = "androidx.startup:startup-runtime", version.ref = "androidx-startup" }
androidx-tvprovider = { module = "androidx.tvprovider:tvprovider", version.ref = "androidx-tvprovider" }
androidx-window = { module = "androidx.window:window", version.ref = "androidx-window" }
androidx-work-runtime = { module = "androidx.work:work-runtime-ktx", version.ref = "androidx-work" }

# Dependency Injection
koin-android-compat = { module = "io.insert-koin:koin-android-compat", version.ref = "koin" }
koin-android-core = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-workmanager = { module = "io.insert-koin:koin-androidx-workmanager", version.ref = "koin" }

# GSON
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

# Media players
exoplayer = { module = "com.google.android.exoplayer:exoplayer", version.ref = "exoplayer" }
libvlc = { module = "org.videolan.android:libvlc-all", version.ref = "libvlc" }

# Image utility
glide-compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }
glide-core = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
kenburnsview = { module = "com.flaviofaria:kenburnsview", version.ref = "kenburnsview" }

# Crash Reporting
acra-dialog = { module = "ch.acra:acra-dialog", version.ref = "acra" }
acra-http = { module = "ch.acra:acra-http", version.ref = "acra" }
acra-limiter = { module = "ch.acra:acra-limiter", version.ref = "acra" }

# Libraries
aboutlibraries = { module = "com.mikepenz:aboutlibraries-core", version.ref = "aboutlibraries" }

# Logging
slf4j-timber = { module = "com.arcao:slf4j-timber", version.ref = "slf4j-timber" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

# Debugging
leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }

# Compatibility (desugaring)
android-desugar = { module = "com.android.tools:desugar_jdk_libs", version.ref = "android-desugar" }

# Testing
junit = { module = "junit:junit", version.ref = "junit" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-test-junit4 = { module = "io.insert-koin:koin-test-junit4", version.ref = "koin" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

[bundles]
acra = [
    "acra-dialog",
    "acra-http",
    "acra-limiter",
]
androidx-lifecycle = [
    "androidx-lifecycle-livedata",
    "androidx-lifecycle-process",
    "androidx-lifecycle-runtime",
    "androidx-lifecycle-service",
    "androidx-lifecycle-viewmodel",
]
koin = [
    "koin-android-compat",
    "koin-android-core",
    "koin-androidx-workmanager",
]
